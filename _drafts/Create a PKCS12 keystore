A PKCS12(Public-Key Cryptography Standards) defines an archive-file format for storing server certificates, intermediate certificate if any, and private key into a single encryptable file.



Before reading this post, I think you already have your private key and a signed certificate file 



[kach07@xserattd001 java_certs]$ cat server1.key > server1.pem 

[kach07@xserattd001 java_certs]$ cat server1.crt >> server1.pem 



[kach07@xserattd001 java_certs]$ openssl pkcs12 -export -in server1.pem -out keystoreservers.pkcs12 -name "Example server keystore"

[kach07@xserattd001 java_certs]$ keytool -list -v -keystore keystoreservers.pkcs12 -storetype PKCS12
Enter keystore password:
Keystore type: PKCS12
Keystore provider: SunJSSE

Your keystore contains 1 entry

Alias name: example server keystore
Creation date: Dec 6, 2019
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: CN=Example server1, OU=dai, L=Stockholm, ST=Stockholm, C=SE
Issuer: CN=Example server1, OU=dai, L=Stockholm, ST=Stockholm, C=SE
Serial number: f7fe7dcf224badbd
Valid from: Fri Dec 06 16:49:09 CET 2019 until: Wed Dec 11 16:49:09 CET 2019
Certificate fingerprints:
MD5: B2:DD:BB:CF:2F:E4:90:A7:03:88:42:CC:D2:11:D7:68
SHA1: 78:7B:79:EC:5E:93:9F:8E:03:62:0F:DA:9B:7F:CF:BE:64:00:19:04
SHA256: 2B:B2:D3:8C:55:21:69:63:6A:87:15:8E:FA:92:66:CB:F9:47:E5:70:B2:13:C3:6B:BA:48:FF:5D:72:81:0B:86
Signature algorithm name: SHA256withRSA
Subject Public Key Algorithm: 2048-bit RSA key
Version: 1


*******************************************
*******************************************



keytool -list -v -keystore keystoreservers.pkcs12 -storetype PKCS12

ansible-playbook -i hosts --connection=local main.yml 

keytool -list -v -keystore ~/tmp/kaikeystore.jks 
