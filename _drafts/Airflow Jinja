Jinja is well explained when using with operators which has support for a template field. however, if you have a python code where you want to render
your own variables, you can using following method from helpers module.

from airflow.utils.helpers import parse_template_string

def pythonCallable(**context):
  filename_template='abc-{{ds}}.csv'
  filename_template, filename_jinja_template = parse_template_string(filename_template)
  filename = filename_jinja_template.render(**context)

