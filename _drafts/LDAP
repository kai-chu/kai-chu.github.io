Data model
Information model is based on entries
- entries, an entry is a collection of attributes that has a globally-unique Distinguished Name (DN)
  - attribute, an attribute has a type and one or more values. 
    - type, mnemonic strings, like "cn" for common name, or "mail" for email address. 
    - objectClass To control which attributes are required and allowed, use a special attribute called objectClass. The values of the objectClass attribute determine the schema rules the entry must obey

Storage data structure
In LDAP, directory entries are arranged in a hierarchical tree-like structure

Operations
Operations are provided for adding and deleting an entry from the directory, changing an existing entry, and changing the name of an entry. 


DN
The LDAP API references an LDAP object by its distinguished name (DN).  A DN is much like an absolute path on a filesystem, LDAP DNs ascend the tree from right to left. For example, the DN “uid=john.doe,ou=People,dc=example,dc=com” represents an entry that is immediately subordinate to “ou=People,dc=example,dc=com” which is itself immediately subordinate to the entry “dc=example,dc=com”.
A DN is a sequence of relative distinguished names (RDN) connected by commas. e.g. dc=a,dc=b
An relative distinguished names (RDN) is comprised of name-value pairs; e.g. “uid=john.doe,ou=People,dc=example,dc=com” has four RDNs
RDN pair, an attribute name followed by an equal sign and the value for that attribute. e.g. dc=a
Multivalued RDN, multiple name-value pairs in the same RDN by separating them with plus signs.  “cn=John Doe+telephoneNumber=+1 123-456-7890”
RDN for an entry, the leftmost component of an entry’s DN. e.g. “uid=john.doe,ou=People,dc=example,dc=com”, the component “uid=john.doe” is often referred to as the RDN for that entry
Attributes hold the data for an entry. Each attribute has an attribute type, zero or more attribute options, and a set of values that comprise the actual data.
Object classes are schema elements that specify collections of attribute types that may be related to a particular type of object, process, or other entity. 
An object identifier (OID) is a string that is used to uniquely identify various elements in the LDAP protocol, as well as in other areas throughout computing
Search filters are used to define criteria for identifying entries that contain certain kinds of information
All search requests include a base DN element, which specifies the portion of the DIT in which to look for matching entries, and a scope, which specifies how much of that subtree should be considered.
The LDIF file is a text file in a format containing data to import/modify/remove object
ObjectClass, ObjectClass attribute specifies the object classes of an entry, LDAP specification requires every entry to have exactly one structural object class, and it may have zero or more AUXILIARY classes
LDAP schema is a set of rules that define what can be stored as entries in an LDAP directory. Each LDAP directory has a default schema, which organizations can customize, or "extend," by adding elements to it.
Top object class, The object classes defined constitute a class hierarchy, the central top level class is called 'top', all other classes are derived from that
null DN/ 0 component

the zero-length DN or the null DN. The null DN may be used to reference a special entry called the root DSE
1 component

multiple components

Naming context, the DN of the entry that is at the top of an LDAP tree is called a naming context (or sometimes referred to as a suffix)
DN string representation, the string representations of each of its RDNs, with each RDN separated by a comma



The following table lists typical RDN attribute types.
TABLE 1
String	Attribute type
DC	domainComponent
CN	commonName
OU	organizationalUnitName
O	organizationName
STREET	streetAddress
L	localityName
ST	stateOrProvinceName
C	countryName
UID	userid


ldapsearch [options] [filter [attributes...]]

Connection
-H where the ldap server host is running

Authentication 
-x Simple authentication
   -w passwd for authentication or -W will prompt to ask
   -D bind to the admin DN
Search 
-b basedn  base dn for search

Input
-console
-f from file 

Example 1
docker exec my-openldap-container ldapsearch -x -H ldap://localhost -b dc=example,dc=org -D "cn=admin,dc=example,dc=org" -w admin

ldapsearch -xLLL -H ldap://localhost -w admin -D 'cn=admin,dc=example,dc=org' -b dc=example,dc=org
ldapadd -x -H ldap://localhost -w admin -D 'cn=admin,dc=example,dc=org' -f /container/service/slapd/assets/test/new-user.ldiff
ldapdelete [options] "entry DN"

https://tools.ietf.org/html/rfc4519
