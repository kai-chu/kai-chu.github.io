1. Index management 
Index is similar as a table in a relational database
1.1 Create index
PUT coop 
{
  "acknowledged" : true,
  "shards_acknowledged" : true,
  "index" : "coop"
}

POST ica/_mapping
POST ica 
{
  "mapping": {
  } 
}

Version
?version=7&version_type=external
avoid overriding
?op_type=create
auto id generation

1.2 Delete index

1.3 Query index 
GET /_cat/indices

1.4 Delete
delete schools

3. open or close index
POST /schools/_close



2. Document management
2.1 Add document 1 to hemkop index
POST/PUT hemkop/_doc/1 
{
  "product": "banana", "price": 23.0
}
{
  "_index" : "hemkop",
  "_type" : "_doc",
  "_id" : "1",
  "_version" : 1,
  "result" : "created",
  "_shards" : {
    "total" : 2,
    "successful" : 2,
    "failed" : 0
  },
  "_seq_no" : 0,
  "_primary_term" : 1
}

Version
?version=7&version_type=external
avoid overriding
?op_type=create
auto id generation
POST hemkop/_doc

2.2 Get document
GET hemkop/_doc/1
https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-get.html
_source_includes
_source_excludes
_source

2.3 Search document in index
Comma Separated Notation
POST /index1,index2,index3/_search
_all Keyword for All Indices
POST /_all/_search
Wildcards ( * , + , â€“)
POST /school*/_search (all prefix with school)
POST /school*,-schools_gov /_search (all, except)
1.3.1 Query index parameters 
A user can search by sending a get request with query string as a parameter or they can post a query in the message body of post request
GET /_all/_search?q=city:paprola 

ignore_unavailable
POST /school*,book_shops/_search?ignore_unavailable = true
allow_no_indices
POST /schools_pri*/_search?allow_no_indices = true
expand_wildcards
POST ic*/_search?expand_wildcards=open
{
   "query":{
      "match_all":{}
   }
}

GET /_all/_search?q=product:banana



pretty 
POST ic*/_search?pretty=true
human
filter_path = hits.total


2.3 delete document
delete hemkop/_doc/1

2.4 update document 
POST schools/_update/4



3. ES conf
3.1 ES auto create index for non-existing index and doc maps
action.auto_create_index:false | action.auto_create_index:+acc*,-bank*
index.mapper.dynamic:false

Search Query 
"query":{
   "match_all":{}
   
   "match" : {
         "rating":"4.5"
   }
   
   "multi_match" : {
         "query": "paprola",
         "fields": [ "city", "state" ]
      }
   "query_string":{
         "query":"beautiful"
      }
   "term":{"zip":"176115"}
   
   "range":{
         "rating":{
            "gte":3.5
         }
      }
   
    "bool" : {
         "must" : {
            "term" : { "state" : "UP" }
         },
         "filter": {
            "term" : { "fees" : "2200" }
         },
         "minimum_should_match" : 1,
         "boost" : 1.0
      }
}
   

Search Aggregation

Cluster 
GET /_cat/nodes?h=ip,port
GET /_cat/count?v
GET /_cat/indices?v

GET /_nodes/_local
GET /_cluster/health
GET /_cluster/state
GET /_cluster/stats
GET /_nodes/stats
GET /_nodes/hot_threads




