Basics about keystore and truststore
2. Create a private key so that we can use it to create a csr file later on

$ [kach07@xserattd002 ~]$ openssl genrsa --help
usage: genrsa [args] [numbits]
 -des            encrypt the generated key with DES in cbc mode
 -des3           encrypt the generated key with DES in ede cbc mode (168 bit key)
 -idea           encrypt the generated key with IDEA in cbc mode
 -seed
                 encrypt PEM output with cbc seed
 -aes128, -aes192, -aes256
                 encrypt PEM output with cbc aes
 -camellia128, -camellia192, -camellia256
                 encrypt PEM output with cbc camellia
 -out file       output the key to 'file
 -passout arg    output file pass phrase source
 -f4             use F4 (0x10001) for the E value
 -3              use 3 for the E value
 -engine e       use engine e, possibly a hardware device.
 -rand file:file:...
                 load the file (or the files in the directory) into
                 the random number generator
 
 
$  [kach07@xserattd002 ~]$ openssl genrsa -des3 -out kai.shb.sth.se.key
Generating RSA private key, 2048 bit long modulus
....+++
.................................................................+++
e is 65537 (0x10001)
Enter pass phrase for kai.shb.sth.se.key:
Verifying - Enter pass phrase for kai.shb.sth.se.key:
 
[kach07@xserattd002 ~]$ ls
kai.shb.sth.se.key


2. Create a csr with extensions configuration

[kach07@xserattd002 ~]$ openssl req --help
req [options] <infile >outfile
where options  are
 -inform arg    input format - DER or PEM
 -outform arg   output format - DER or PEM
 -in arg        input file
 -out arg       output file
 -text          text form of request
 -pubkey        output public key
 -noout         do not output REQ
 -verify        verify signature on REQ
 -modulus       RSA modulus
 -nodes         don't encrypt the output key
 -engine e      use engine e, possibly a hardware device
 -subject       output the request's subject
 -passin        private key password source
 -key file      use the private key contained in file
 -keyform arg   key file format
 -keyout arg    file to send the key to
 -rand file:file:...
                load the file (or the files in the directory) into
                the random number generator
 -newkey rsa:bits generate a new RSA key of 'bits' in size
 -newkey dsa:file generate a new DSA key, parameters taken from CA in 'file'
 -newkey ec:file generate a new EC key, parameters taken from CA in 'file'
 -[digest]      Digest to sign with (see openssl dgst -h for list)
 -config file   request template file.
 -subj arg      set or modify request subject
 -multivalue-rdn enable support for multivalued RDNs
 -new           new request.
 -batch         do not ask anything during request generation
 -x509          output a x509 structure instead of a cert. req.
 -days          number of days a certificate generated by -x509 is valid for.
 -set_serial    serial number to use for a certificate generated by -x509.
 -newhdr        output "NEW" in the header lines
 -asn1-kludge   Output the 'request' in a format that is wrong but some CA's
                have been reported as requiring
 -extensions .. specify certificate extension section (override value in config file)
 -reqexts ..    specify request extension section (override value in config file)
 -utf8          input characters are UTF8 (default ASCII)
 -nameopt arg    - various certificate name options
 -reqopt arg    - various request text options
 
 
[kach07@xserattd002 ~]$ vi req_v3_ext.cnf
stateOrProvinceName_default = MN
countryName_default = US
[ req ]
distinguished_name = req_distinguished_name
req_extensions = v3_req
[req_distinguished_name]
countryName = Country Name (2 letter code)
countryName_default = SE
stateOrProvinceName = State or Province Name (full name)
stateOrProvinceName_default = Stockholm
localityName = Locality Name (eg, city)
localityName_default = Stockholm
organizationalUnitName  = Organizational Unit Name (eg, section)
organizationalUnitName_default  = Svenska Handelsbanken AB (publ) internal
commonName = Command Name (hostname, IP, or your name)
commonName_max  = 64
commonName_default = kai.shb.sth.se
[ v3_req ]
# Extensions to add to a certificate request
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
subjectAltName = @alt_names
[alt_names]
DNS.1 = 001.shb.sth.se
 
 
[kach07@xserattd002 ~]$ openssl req -new -key ./kai.shb.sth.se.key -nodes -batch -config ./req_v3_ext.cnf -out kai.shb.sth.se.csr -newhdr
 
 
[kach07@xserattd002 ~]$ openssl req -text -noout -in kai.shb.sth.se.csr
Certificate Request:
    Data:
        Version: 0 (0x0)
        Subject: C=SE, ST=Stockholm, L=Stockholm, OU=Svenska Handelsbanken AB (publ) internal, CN=kai.shb.sth.se
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c0:4a:30:6c:71:87:0c:0d:77:ce:a9:13:bf:b2:
                    f1:4e:65:39:72:a8:18:60:28:73:45:80:f8:08:a3:
                    34:2f:6e:eb:28:72:95:88:9a:f8:e5:36:4c:cb:d6:
                    07:84:b4:71:ab:cf:c2:db:80:97:4a:38:3a:2e:93:
                    2b:7c:50:ed:f4:fb:e3:95:ee:86:78:04:40:00:f6:
                    b6:d4:da:a0:68:46:d0:ac:4c:07:c7:e5:aa:bc:f4:
                    93:f1:a8:1c:0d:1b:1a:6f:e5:fb:3f:e0:ed:b3:de:
                    47:ad:ef:af:48:3c:60:1d:89:2c:89:74:df:fc:82:
                    c1:66:5f:97:c8:9a:84:c5:ec:1b:9b:f7:b8:2b:ab:
                    20:b9:96:b1:4e:4f:91:01:b0:47:d6:ea:de:34:92:
                    24:f4:5a:23:fe:d2:ed:73:c1:74:02:4b:19:e6:1b:
                    ea:96:61:cd:d1:b7:67:44:7f:66:74:4d:0f:f5:09:
                    00:2e:37:b2:37:7f:62:e8:76:43:43:f1:5a:23:03:
                    d5:d6:72:99:f1:6e:3e:58:0d:76:8b:e4:be:0e:80:
                    2c:a9:da:24:05:85:a9:54:b7:58:eb:b9:2e:cf:fc:
                    a9:d1:69:3a:c9:23:76:6c:92:81:2b:39:e3:58:24:
                    7e:51:0e:68:74:f0:fb:6b:9c:50:0e:42:8e:c0:dd:
                    3a:63
                Exponent: 65537 (0x10001)
        Attributes:
        Requested Extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            X509v3 Key Usage:
                Digital Signature, Non Repudiation, Key Encipherment
            X509v3 Subject Alternative Name:
                DNS:001.shb.sth.se
    Signature Algorithm: sha256WithRSAEncryption
         39:4a:ca:40:7b:97:45:53:4a:56:25:63:17:4f:67:bb:c8:fa:
         00:3b:07:b4:21:d8:bc:b0:bf:98:c0:b1:1b:c2:80:bf:e5:9c:
         a0:d5:fa:53:cf:13:0f:76:26:1f:c1:27:c2:31:f1:f8:3f:cc:
         86:24:68:ff:69:3f:13:39:03:b2:cc:6f:38:e9:08:85:3f:df:
         a9:a9:e4:55:6f:13:48:a3:f6:00:e0:2d:c8:47:17:3b:61:11:
         e3:7d:98:10:36:17:3c:3b:f4:19:ce:0c:c1:d2:50:c8:b2:ad:
         39:b0:d2:e3:d6:78:a1:6e:af:78:d8:9e:c3:03:e8:34:f1:fc:
         ea:1e:31:a2:ad:75:ab:f8:c7:ca:38:5f:04:93:b1:5f:7e:5f:
         f2:62:9a:1a:87:91:39:05:00:eb:47:a9:26:73:ea:9c:96:6c:
         1f:17:c1:f3:b3:ea:f6:01:5f:06:d7:e8:20:22:dc:bc:35:ee:
         c5:89:7a:0b:05:05:37:ec:e8:ba:63:43:e7:0f:32:de:d3:9a:
         30:d1:98:90:45:b9:2e:39:3a:a4:b4:de:6f:f5:a2:f1:32:7e:
         f9:c7:b9:ab:89:15:a0:94:57:4b:18:b8:59:36:1f:5e:93:f9:
         48:f1:8d:fc:cd:a8:42:86:46:b7:7b:a8:50:f9:da:36:29:36:
         48:9a:1d:4f


3. Get certificates from security team

3.1 Create a CA and check the key

[kach07@xserattd002 ~]$ openssl rsa -in rootca.shb.sth.se.key.pem  -check
Enter pass phrase for rootca.shb.sth.se.key.pem:
RSA key ok
writing RSA key
-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAxWdMEGe12AzDDyX6iAFhYnwm08FZUWZXA+dBXuwjLOBFJB/S
hDQ+QuGQiSsoFlSYMzAx9F1EKjdM3t85MDoR7sBvg0TghqvMXOJX8+CLdFbgGsKi
As9s/ieHm8WUXT4DYGmSnjUR9yYA6GEAJ1aK/2mhXMnLJ8TQ3TbdzK5Db310+Z6k
do4l7rUnK/o7aiN8twVIVmRGXqBPy9Ksv4vPttBnSWoRRhodLDYSn2xHmwGvkOER
QNO9M1HOHZ/JiPAj2S8k4MNnm3coHYCZosO/9yVn+H433UnarvLF3lXchi/aVe4p
N+jEtZGg4gwhfB1tl4ZS2g/DWEGLDMEwSLIQCQIDAQABAoIBAGZ5ciYOAHsQXO3v
NDgIJ2q9slY4x8oWy1MOaIQDJ1tzbNEM5/aTPELx31slmSDGd2ATQ8tr4yfbHz+P
N5vOeWKsaPcG+VtPsb4CDdBfH2Wcd6fMo9e7oAPrt1zo21TwDUauZ1tTh2j6RHxd
ZnwFVBC03/xQEPMrG5XKlqdbS0yDNR2hIsOqHULI8Xc81cS2REIjz05exzqh5ije
q8WpvL0+qEDoKwN6s+5Laaf58maU00moGHUigehjpwhMJ6ejP3wHs6EpXKaAZL/o
TyzJdGVh0mwpCjsh5mfK8e00YUxlK+9Op53LMQnwtCCwMSet5m8qbMBbcgAFVY/I
7rF5fJUCgYEA8D82SM/h5a4Fw5AUVcdeE/rvY2uTOyAU/KxHKPwaCg3A1Kri2CjE
gfWJr5bfbSeWq1suF8RxvAhNEGVfw7du8IAtG4YPTklfCfALTOfBAQO/AU2VvmQi
HzzGlJ+FlxTLmdRcU2jJqjI9B78SBlcT5VnLCwrpY7seegSTfzH7t3MCgYEA0ljq
N6lgCm3Fn3WnqN6GZ4zd+1rQhSwpB7/Yp1xQTnQF96ZnSeHl/vRPVgM7sibaE07v
Lei/SesRoLoo88DDSDoQkcWT6rp2XRjuIbu4iQl9ttgXQMXaqNbtNGWpXzl2yl8K
p0PY2odpK55GfbhVhiBNo0Y6UabhCEedtZXhI5MCgYAhGFQeC6UOwr5AhmSGvIQV
NIgtpfAOQQkjFYhn+PKNV/+sTC4boOIRFQX2jk4Q91cmG9VpqMISKQKUs6JRj79U
mhOcqwcIvcq9z7d+zJ4lyaJSR6HNLHYW34RrjN4WReMWOc7OHq1JKMqHeqa9ANnY
ylnSF5q3BlvYazD2YKhQSQKBgQCA/zRMBFw4qQ8b9mxmfGkSkeoEXrIoKWfUL8vu
/wbkxfRu5qbLQXTqAOuyhPMUEw2D79FwZx8Adt9toRzCN4HLBojozLEkr0stVr+b
AmNt7tsgya6g83VgO8Zmbr4K/tOh0d1XrJ0NjyNpM3xpVyVjxuW17riPIHc6u6i1
FoBmbwKBgQC5iJApnL/yn934/Vr6j6cgqT2QquClcnhm5SwQi/66mSUkfKEg4XGw
L2hZLgtoVLN/pmHOhgcscyOEayt4ddnxe2xUcW2p7qAB45WnyNpuTeKtwqM6dy5P
9eHwVVKQbKpRC/3sxCyUkoyg3oJDuvAz+9ABg4f17FVdZaB+KN0gqg==
-----END RSA PRIVATE KEY-----
 
 
 
[kach07@xserattd002 ~]$ openssl req -key rootca.shb.sth.se.key.pem -new -x509 -days 365 -sha256 -extensions v3_ca -out root.shb.sth.se.cert.pem
Enter pass phrase for rootca.shb.sth.se.key.pem:
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [XX]:SE
 
 
[kach07@xserattd002 ~]$ openssl x509 -in root.shb.sth.se.cert.pem -text -noout
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            99:74:a0:e3:41:30:a0:84
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=SE, ST=Stocl\x08k\x08\x08holm, L=Stockholm, O=OC, OU=OC, CN=root.shb.sth.se
        Validity
            Not Before: Dec 16 15:19:20 2019 GMT
            Not After : Dec 15 15:19:20 2020 GMT
        Subject: C=SE, ST=Stocl\x08k\x08\x08holm, L=Stockholm, O=OC, OU=OC, CN=root.shb.sth.se
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c5:67:4c:10:67:b5:d8:0c:c3:0f:25:fa:88:01:
                    61:62:7c:26:d3:c1:59:51:66:57:03:e7:41:5e:ec:
                    23:2c:e0:45:24:1f:d2:84:34:3e:42:e1:90:89:2b:
                    28:16:54:98:33:30:31:f4:5d:44:2a:37:4c:de:df:
                    39:30:3a:11:ee:c0:6f:83:44:e0:86:ab:cc:5c:e2:
                    57:f3:e0:8b:74:56:e0:1a:c2:a2:02:cf:6c:fe:27:
                    87:9b:c5:94:5d:3e:03:60:69:92:9e:35:11:f7:26:
                    00:e8:61:00:27:56:8a:ff:69:a1:5c:c9:cb:27:c4:
                    d0:dd:36:dd:cc:ae:43:6f:7d:74:f9:9e:a4:76:8e:
                    25:ee:b5:27:2b:fa:3b:6a:23:7c:b7:05:48:56:64:
                    46:5e:a0:4f:cb:d2:ac:bf:8b:cf:b6:d0:67:49:6a:
                    11:46:1a:1d:2c:36:12:9f:6c:47:9b:01:af:90:e1:
                    11:40:d3:bd:33:51:ce:1d:9f:c9:88:f0:23:d9:2f:
                    24:e0:c3:67:9b:77:28:1d:80:99:a2:c3:bf:f7:25:
                    67:f8:7e:37:dd:49:da:ae:f2:c5:de:55:dc:86:2f:
                    da:55:ee:29:37:e8:c4:b5:91:a0:e2:0c:21:7c:1d:
                    6d:97:86:52:da:0f:c3:58:41:8b:0c:c1:30:48:b2:
                    10:09
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Subject Key Identifier:
                13:24:06:D3:FF:8B:14:67:1D:DB:37:64:6D:6B:CF:E6:3C:66:15:B8
            X509v3 Authority Key Identifier:
                keyid:13:24:06:D3:FF:8B:14:67:1D:DB:37:64:6D:6B:CF:E6:3C:66:15:B8
            X509v3 Basic Constraints:
                CA:TRUE
    Signature Algorithm: sha256WithRSAEncryption
         70:2b:f4:e9:e9:bb:15:d4:a9:7f:30:10:c5:f3:59:a3:ab:ff:
         ec:11:d1:a7:36:bf:1f:ed:58:b6:65:80:ea:d5:42:9f:cc:1b:
         d2:31:86:6b:e2:a7:5a:00:f1:7e:00:48:a6:22:48:3f:93:ad:
         ad:80:bd:c4:9b:15:bf:da:67:7f:d0:df:45:37:5f:50:35:68:
         b6:2e:1d:6c:c7:e6:82:1d:24:3d:67:12:cc:56:99:c1:d6:cb:
         37:6e:06:24:2d:a8:d2:44:e4:c6:4f:44:1f:21:71:8c:c8:ca:
         1c:5b:ea:db:15:54:51:dd:02:6e:f8:89:44:cb:44:90:a4:1c:
         0c:a4:0b:e0:94:fc:7a:da:c9:f0:df:6f:7e:5f:74:a1:72:ef:
         33:08:17:24:1e:bf:d1:30:9f:07:3a:34:5f:1d:05:70:f1:40:
         0b:8d:2a:fc:40:f9:73:74:df:91:ec:2f:ae:59:1e:14:34:23:
         b2:34:2d:29:12:5a:0e:01:d7:81:86:60:7e:bf:26:77:d7:75:
         60:c3:a8:92:0b:e2:58:40:e9:23:50:06:c2:36:2a:34:52:c5:
         90:3b:f6:71:dc:f6:81:a5:74:11:74:42:b9:ea:68:e8:f3:c3:
         79:f6:fb:18:b4:59:b3:ab:6a:71:9d:1a:23:4e:df:f1:56:70:
         3a:03:66:83


3.2 Sign the csr with created CA to have a certificate

[kach07@xserattd002 ~]$ openssl genrsa -des3 -out rootca.shb.sth.se.key
Generating RSA private key, 2048 bit long modulus
.................................+++
..............+++
e is 65537 (0x10001)
Enter pass phrase for rootca.shb.sth.se.key:
Verifying - Enter pass phrase for rootca.shb.sth.se.key:
 
 
[kach07@xserattd002 ~]$ openssl x509 -req -days 365 -in kai.shb.sth.se.csr -CA root.shb.sth.se.cert.pem -CAkey rootca.shb.sth.se.key.pem -CAcreateserial -out kai.shb.sth.se.crt
Signature ok
subject=/C=SE/ST=Stockholm/L=Stockholm/OU=Svenska Handelsbanken AB (publ) internal/CN=kai.shb.sth.se
Getting CA Private Key
Enter pass phrase for rootca.shb.sth.se.key.pem:


3.3 Check the certificate in text

[kach07@xserattd002 ~]$ openssl x509 -in kai.shb.sth.se.crt -text -noout
Certificate:
    Data:
        Version: 1 (0x0)
        Serial Number:
            a1:b6:a8:fa:93:84:84:87
    Signature Algorithm: sha256WithRSAEncryption
        Issuer: C=SE, ST=Stocl\x08k\x08\x08holm, L=Stockholm, O=OC, OU=OC, CN=root.shb.sth.se
        Validity
            Not Before: Dec 16 15:23:09 2019 GMT
            Not After : Dec 15 15:23:09 2020 GMT
        Subject: C=SE, ST=Stockholm, L=Stockholm, OU=Svenska Handelsbanken AB (publ) internal, CN=kai.shb.sth.se
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (2048 bit)
                Modulus:
                    00:c0:4a:30:6c:71:87:0c:0d:77:ce:a9:13:bf:b2:
                    f1:4e:65:39:72:a8:18:60:28:73:45:80:f8:08:a3:
                    34:2f:6e:eb:28:72:95:88:9a:f8:e5:36:4c:cb:d6:
                    07:84:b4:71:ab:cf:c2:db:80:97:4a:38:3a:2e:93:
                    2b:7c:50:ed:f4:fb:e3:95:ee:86:78:04:40:00:f6:
                    b6:d4:da:a0:68:46:d0:ac:4c:07:c7:e5:aa:bc:f4:
                    93:f1:a8:1c:0d:1b:1a:6f:e5:fb:3f:e0:ed:b3:de:
                    47:ad:ef:af:48:3c:60:1d:89:2c:89:74:df:fc:82:
                    c1:66:5f:97:c8:9a:84:c5:ec:1b:9b:f7:b8:2b:ab:
                    20:b9:96:b1:4e:4f:91:01:b0:47:d6:ea:de:34:92:
                    24:f4:5a:23:fe:d2:ed:73:c1:74:02:4b:19:e6:1b:
                    ea:96:61:cd:d1:b7:67:44:7f:66:74:4d:0f:f5:09:
                    00:2e:37:b2:37:7f:62:e8:76:43:43:f1:5a:23:03:
                    d5:d6:72:99:f1:6e:3e:58:0d:76:8b:e4:be:0e:80:
                    2c:a9:da:24:05:85:a9:54:b7:58:eb:b9:2e:cf:fc:
                    a9:d1:69:3a:c9:23:76:6c:92:81:2b:39:e3:58:24:
                    7e:51:0e:68:74:f0:fb:6b:9c:50:0e:42:8e:c0:dd:
                    3a:63
                Exponent: 65537 (0x10001)
    Signature Algorithm: sha256WithRSAEncryption
         2b:1d:6e:3d:95:32:dd:74:a8:5f:ee:5b:64:03:ca:ea:18:68:
         c3:46:07:0a:5d:ae:5c:1b:2b:46:3a:2c:77:0e:2a:30:20:6f:
         e0:be:40:c7:99:37:2d:91:6b:0d:1b:92:f0:fd:ef:14:1c:c4:
         54:98:fd:c5:47:e9:5b:de:8d:96:99:d4:17:3f:e6:96:9b:c3:
         47:e3:bf:1d:ac:7b:20:43:b5:37:2d:71:9d:8a:57:7f:87:86:
         e7:5b:d4:fd:cf:0e:62:55:14:93:33:5a:4c:2d:fa:ef:91:e7:
         b9:d0:87:f3:ae:e9:cb:ea:c6:bc:03:6e:d1:0b:cf:35:2a:de:
         bb:d9:98:74:d4:8e:12:07:97:a8:ef:55:cf:3f:1d:dd:0c:ef:
         2f:3a:1a:12:95:f3:ad:d6:39:b2:f0:fc:ca:33:2e:14:6b:fb:
         14:07:c0:b8:c9:d7:84:87:cc:a9:49:bb:35:cd:87:7b:19:2a:
         b3:ca:45:85:21:a5:de:fe:31:ed:d1:9d:ae:49:73:c4:21:33:
         97:84:90:4e:84:b5:4e:71:19:40:93:e3:55:c8:d3:52:2f:00:
         94:24:9a:75:3a:c5:15:47:94:57:6f:73:06:03:e0:cc:82:b8:
         b2:90:91:20:b0:e6:f7:20:f4:f2:6a:f8:c4:02:71:a1:65:25:
         c4:00:bd:db
4. Put certificates into keystore

Create a PKCS12 keystore

5. Script to check certificates expiration in keystore

Bash to check if any certificate in keystore will be expired

6. Monitoring services and notification

come later...





In the end, better to know if u don't understand part of the flow

The subject alternative name extension allows identities to be bound
   to the subject of the certificate.  These identities may be included
   in addition to or in place of the identity in the subject field of
   the certificate.  Defined options include an Internet electronic mail
   address, a DNS name, an IP address, and a Uniform Resource Identifier
   (URI). 

 all parts of the subject alternative name
   MUST be verified by the CA.

If the subjectAltName extension is present, the sequence MUST contain
   at least one entry.



 Further, if the only subject identity included in the certificate is
   an alternative name form (e.g., an electronic mail address), then the
   subject distinguished name MUST be empty (an empty sequence), and the
   subjectAltName extension MUST be present. 

If the subject field
   contains an empty sequence, then the issuing CA MUST include a
   subjectAltName extension that is marked as critical. 

When including
   the subjectAltName extension in a certificate that has a non-empty
   subject distinguished name, conforming CAs SHOULD mark the
   subjectAltName extension as non-critical.



Format of alternatives

DNS.1 = name1

DNS.2 = name2





http://apetec.com/support/generatesan-csr.htm

https://tools.ietf.org/html/rfc5280#section-4.2.1.6

https://www.openssl.org/docs/manmaster/man5/x509v3_config.html#Subject-Alternative-Name
